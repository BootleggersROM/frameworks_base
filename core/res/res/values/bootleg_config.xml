<resources>
    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
    </string-array>

    <!-- Hardware 'face' keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">0</integer>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
    </string-array>

    <!-- Button backlight -->
    <integer name="config_buttonBrightnessSettingDefault">255</integer>
    <bool name="config_deviceHasVariableButtonBrightness">false</bool>

    <!-- Default value for proximity check on screen wake
         NOTE ! - Enable for devices that have a fast response proximity sensor (ideally < 300ms)
    -->
    <bool name="config_proximityCheckOnWake">false</bool>
    <integer name="config_proximityCheckTimeout">250</integer>
    <bool name="config_proximityCheckOnWakeEnabledByDefault">false</bool>

    <!-- Whether to show a custom view for FOD -->
    <bool name="config_needCustomFODView">false</bool>

    <!-- Whether to allow process with media UID to access CameraServiceProxy -->
    <bool name="config_allowMediaUidForCameraServiceProxy">false</bool>

    <!-- Older rotation sensors are not setting event.timestamp correctly. Setting to
         true will use SystemClock.elapsedRealtimeNanos() to set timestamp. -->
    <bool name="config_useSystemClockforRotationSensor">false</bool>

    <!-- Add some extra spacing to all the buttons affected by TextAllCaps -->
    <item name="config_buttonTextLetterSpacing" format="float" type="dimen">0</item>

    <!-- Whether notify fingerprint client of successful cancelled authentication -->
    <bool name="config_notifyClientOnFingerprintCancelSuccess">false</bool>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- Whether device has a physical display cutout -->
    <bool name="config_physicalDisplayCutout">false</bool>

    <!-- Whether device has a big physical display cutout -->
    <bool name="config_bigPhysicalDisplayCutout">false</bool>

    <!-- Whether the device supports Smart Pixels -->
    <bool name="config_enableSmartPixels">false</bool>

    <!-- The list of components which should be automatically disabled for a specific device.
         Note: this MUST not be used to randomly disable components, ask for approval first! -->
    <string-array name="config_deviceDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be automatically disabled for all devices. -->
    <string-array name="config_globallyDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be forced to be enabled. -->
    <string-array name="config_forceEnabledComponents" translatable="false">
    </string-array>

    <!-- Whether device has dash charging support -->
    <bool name="config_hasDashCharger">false</bool>

    <!-- Whether device ignores the RSSNR signal implementation -->
    <bool name="config_ignoreRssnrSignalLevel">false</bool>

    <!-- Whether device has physical tri state switch -->
    <bool name="config_hasAlertSlider">false</bool>

    <!-- The location of the devices physical tri state switch
         0: Left side
         1: Right side -->
    <integer name="config_alertSliderLocation">0</integer>

    <!-- Path to the library that contains a alternative device specific key handler -->
    <string name="config_alternativeDeviceKeyHandlerLib" translatable="false"></string>

    <!-- Name of that alternative key handler class -->
    <string name="config_alternativeDeviceKeyHandlerClass" translatable="false"></string>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveBatteryLed">true</bool>

    <!-- Does the battery LED support multiple colors?
         Used to decide if the user can change the colors -->
    <bool name="config_multiColorBatteryLed">true</bool>

    <!-- Does the notification LED support multiple colors?
         Used to decide if the user can change the colors -->
    <bool name="config_multicolorled">true</bool>

    <!-- Do the battery/notification LEDs support pulsing?
         Used to decide if we show pulse settings -->
    <bool name="config_ledCanPulse">true</bool>

    <!-- Smart charging battery percentage -->
    <integer name="config_smartChargingBatteryLevel">80</integer>
    <integer name="config_smartChargingBatteryResumeLevel">60</integer>
    <string name="config_SmartChargingSysfsNode" translatable="false">/sys/class/power_supply/battery/input_suspend</string>
    <string name="config_SmartChargingSupspendValue" translatable="false">1</string>
    <string name="config_SmartChargingResumeValue" translatable="false">0</string>

    <!-- Whether to use scaled brightness (set -1 to disable) -->
    <integer name="config_useScaleBrightness">-1</integer>

    <!-- Defines the sysfs attribute path used by pocket bridge
       to communicate pocket state to the pocket judge kernel driver. -->
    <string name="config_pocketBridgeSysfsInpocket"></string>

    <!-- Whether device has warp charging support -->
    <bool name="config_hasWarpCharger">false</bool>
</resources>
